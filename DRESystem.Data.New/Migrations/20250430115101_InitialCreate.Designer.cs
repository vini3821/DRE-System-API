// <auto-generated />
using System;
using DRESystem.Data.New;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DRESystem.Data.New.Migrations
{
    [DbContext(typeof(DREContext))]
    [Migration("20250430115101_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DRESystem.Domain.New.CC", b =>
                {
                    b.Property<int>("CCID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CCID"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FKRegion")
                        .HasColumnType("int");

                    b.Property<int>("FKSector")
                        .HasColumnType("int");

                    b.HasKey("CCID");

                    b.HasIndex("FKRegion");

                    b.HasIndex("FKSector");

                    b.ToTable("CostCenters");
                });

            modelBuilder.Entity("DRESystem.Domain.New.Collaborator", b =>
                {
                    b.Property<int>("CollaboratorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CollaboratorID"));

                    b.Property<int>("FKCC")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CollaboratorID");

                    b.HasIndex("FKCC");

                    b.ToTable("Collaborators");
                });

            modelBuilder.Entity("DRESystem.Domain.New.Entry", b =>
                {
                    b.Property<int>("EntryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntryID"));

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EntryType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FKC")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("EntryID");

                    b.HasIndex("FKC");

                    b.ToTable("Entries");
                });

            modelBuilder.Entity("DRESystem.Domain.New.Region", b =>
                {
                    b.Property<int>("RegionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegionID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RegionID");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("DRESystem.Domain.New.Sector", b =>
                {
                    b.Property<int>("SectorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SectorID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SectorID");

                    b.ToTable("Sectors");
                });

            modelBuilder.Entity("DRESystem.Domain.New.CC", b =>
                {
                    b.HasOne("DRESystem.Domain.New.Region", "Region")
                        .WithMany("CostCenters")
                        .HasForeignKey("FKRegion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DRESystem.Domain.New.Sector", "Sector")
                        .WithMany("CostCenters")
                        .HasForeignKey("FKSector")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");

                    b.Navigation("Sector");
                });

            modelBuilder.Entity("DRESystem.Domain.New.Collaborator", b =>
                {
                    b.HasOne("DRESystem.Domain.New.CC", "CostCenter")
                        .WithMany("Collaborators")
                        .HasForeignKey("FKCC")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CostCenter");
                });

            modelBuilder.Entity("DRESystem.Domain.New.Entry", b =>
                {
                    b.HasOne("DRESystem.Domain.New.Collaborator", "Collaborator")
                        .WithMany("Entries")
                        .HasForeignKey("FKC")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collaborator");
                });

            modelBuilder.Entity("DRESystem.Domain.New.CC", b =>
                {
                    b.Navigation("Collaborators");
                });

            modelBuilder.Entity("DRESystem.Domain.New.Collaborator", b =>
                {
                    b.Navigation("Entries");
                });

            modelBuilder.Entity("DRESystem.Domain.New.Region", b =>
                {
                    b.Navigation("CostCenters");
                });

            modelBuilder.Entity("DRESystem.Domain.New.Sector", b =>
                {
                    b.Navigation("CostCenters");
                });
#pragma warning restore 612, 618
        }
    }
}
